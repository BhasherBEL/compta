stages:
  - lint
  - unit
  - publish

default:
  image: "node:16-alpine"
  # https://docs.gitlab.com/ee/ci/pipelines/settings.html#auto-cancel-pending-pipelines
  interruptible: true
  # Retry automatically incase the runner times out or there's a runner failure
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
  tags:
    - linux

before_script:
  - df -h /
  - free -h
  - npm --version
  - rm -rf public/build
  - npm ci

# Defines when the CI should automatically run.
# Set to run on:
# - merge request pipelines
# - default branch (main)
# - tagged commits pipeline
workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

sveltte-check:
  stage: lint
  before_script:
    # Ensure svelte-check is installed
    - npm list | grep svelte-check || npm add svelte-check
  script:
    - ./node_modules/.bin/svelte-check

# Publishes compta to the gitlab container registry
# https://gitlab.com/groups/louvainlinux/-/container_registries
# Publishing jobs only run on non-scheduled pipelines on release tags/branches,
# if the previous pipeline jobs succeeded
.publish:
  stage: publish
  before_script:
    - df -h /
    - free
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^r[0-9]+\.[0-9]+/ && $CI_PIPELINE_SOURCE != "schedule"
      when: on_success
    - when: never

# Nightly publishing jobs only run on non-scheduled pipelines on release
# tags/branches, if the previous pipeline jobs succeeded
.publish-nightly:
  stage: publish
  before_script:
    - df -h /
    - free
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "schedule"
      when: always
    - when: never

docker:
  extends: .publish
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
    - ls "$CI_PROJECT_DIR/server-cli/"
  script:
    # Help kaniko identify that it is running in a container.
    # avoids this issue: https://github.com/GoogleContainerTools/kaniko/issues/1542
    - export container=docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination "${CI_REGISTRY_IMAGE}/compta:${CI_COMMIT_REF_NAME}"

docker-nightly:
  extends: .publish-nightly
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    # Help kaniko identify that it is running in a container.
    # avoids this issue: https://github.com/GoogleContainerTools/kaniko/issues/1542
    - export container=docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination "${CI_REGISTRY_IMAGE}/compta:nightly"

